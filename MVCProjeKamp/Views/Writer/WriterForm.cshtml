@model EntityLayer.Concrate.Writer

@{
    ViewBag.Title = "WriterForm";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}


<div class="row">
    <div class="col mt-4">
        <div class="card card-secondary">
            <div class="card-header">
                <h3 class="card-title">Writer Form</h3>


            </div>
            <div class="card-body">
                @using (Ajax.BeginForm("SaveWriter", "Writer", new AjaxOptions { HttpMethod="POST", UpdateTargetId="alert" }))
                {
                    <div class="form-group">
                        <label for="inputName">Name</label>
                        @Html.TextBoxFor(x => x.WriterName, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.WriterName)

                    </div>
                    <div class="form-group">
                        <label for="inputDescription">Surname</label>
                        @Html.TextBoxFor(x => x.WriterSurname, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.WriterSurname)
                    </div>
                    <div class="form-group">

                        <label for="inputDescription">Mail</label>
                        @Html.TextBoxFor(x => x.WriterMail, new { @class = "form-control", type = "email" })
                        @Html.ValidationMessageFor(m => m.WriterMail)
                    </div>
                    <div class="form-group">
                        <label for="inputDescription">Password</label>
                        @Html.TextBoxFor(x => x.WriterPassword, new { @class = "form-control", type = "password" })
                        @Html.ValidationMessageFor(m => m.WriterPassword)
                    </div>
                    <div class="form-group">
                        <label for="inputDescription">Image</label>
                        @Html.TextBoxFor(x => x.WriterPicture, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.WriterPicture)
                    </div>
                    <div class="form-group">
                        <label for="inputDescription">Title</label>
                        @Html.TextBoxFor(x => x.WriterTitle, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.WriterTitle)
                    </div>
                    <div class="form-group">
                        <label for="inputDescription">About yourself</label>
                        @Html.TextAreaFor(x => x.WriterAbout, new { @class = "form-control", rows = "4" })
                        @Html.ValidationMessageFor(m => m.WriterAbout)
                    </div>
                    @Html.HiddenFor(x => x.WriterID)
                    @Html.HiddenFor(x=>x.WriterStatus)
                    @Html.HiddenFor(x=>x.WriterRole)
                    <div class="row justify-content-between">
                        <div class="col-1 ">
                            <button type="submit" class="btn btn-success btn-lg">Save</button>
                        </div>
                        <div class="col-md-5">
                            <div id="alert"> </div>

                        </div>

                    </div>
                }
            </div>

        </div>

    </div>

</div>


@section scripts {

    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
}

